// this is a DSLD file
// start off creating a custom DSL Descriptor for your Groovy DSL

// Example of using the DSL to create entities with properties and relations
import static nl.pals.entity.generator.EntityGenerator.entity
import java.time.LocalDate
import nl.pals.entity.generator.Entity

employerXYZ = ["AHOLD", "JUMBO"]
employerABC = ["FORD", "OPEL"]

def prop = Entity.random(["abc", "xyz"])

entity("Contract") {
	property("id", 1)
	property("age", randomInt(18, 65))
	property("name", "Root Entity")
	property("startDate", "2023-01-01")
	property("name", random(["Alice","Bob","Charlie","Diana"]))
	property("name2", random(["Alice","Bob","Charlie","Diana"], [1, 3, 5, 2]))


	relation("Coverages") {
		property("startDate", "2023-01-01")

		def ingDat = properties.startDate

		relation("HFD") {
			property("id", 1001)
			property("name", "Hoofd")
			property("ingangsDatum", ingDat)
			property("eindDatum", randomDate("2023-01-01", "2024-01-01"))
			property("eindDatum2", randomDate(LocalDate.now(), LocalDate.now().plusYears(5)))
			property("propositie", prop)
		}

		relation("EXTRA") {
			property("id", 1002)
			property("name", "Extra")
			property("ingangsDatum", ingDat)
		}
	}

	relation("Premium") {
		property("id", 102)
		property("name", "Prem")
		property("type", "Type B")
		property("afgesloten", random([true, false]))
		property("range", random([0, 1, random(5..10)], [1,1,9]))
		property("leeftijd", random(15..50))
		property("datum", random(LocalDate.now()..LocalDate.now().plusDays(15)).toString())
		
	}
}

